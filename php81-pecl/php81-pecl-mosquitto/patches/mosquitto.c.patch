--- a/mosquitto.c	2019-04-30 19:43:58.000000000 +0900
+++ b/mosquitto.c	2022-03-08 23:05:39.391318687 +0900
@@ -26,14 +26,14 @@
 typedef size_t mosquitto_strlen_type;
 #else /* ZEND_ENGINE_2 */
 # ifndef Z_OBJ_P
-#  define Z_OBJ_P(pzv) ((zend_object*)zend_object_store_get_object(pzv TSRMLS_CC))
+#  define Z_OBJ_P(pzv) ((zend_object*)zend_object_store_get_object(pzv))
 # endif
 # define ZO_HANDLE_DC , zend_object_handle handle
 typedef int mosquitto_strlen_type;
 typedef long zend_long;
 #endif
 
-static inline mosquitto_client_object *mosquitto_client_object_get(zval *zobj TSRMLS_DC) {
+static inline mosquitto_client_object *mosquitto_client_object_get(zval *zobj) {
 	// TODO: ZEND_ASSERT()s
 	mosquitto_client_object *obj = mosquitto_client_object_from_zend_object(Z_OBJ_P(zobj));
 	if (!obj->client) {
@@ -71,6 +71,32 @@
 
 /* {{{ Arginfo */
 
+ZEND_BEGIN_ARG_INFO(Mosquitto_Client_no_args, ZEND_SEND_BY_VAL)
+ZEND_END_ARG_INFO()
+
+ZEND_BEGIN_ARG_INFO(Mosquitto_Client_setTlsPSK_args, ZEND_SEND_BY_VAL)
+	ZEND_ARG_INFO(0, psk)
+	ZEND_ARG_INFO(0, identify)
+	ZEND_ARG_INFO(0, cipers)
+ZEND_END_ARG_INFO()
+
+ZEND_BEGIN_ARG_INFO(Mosquitto_Client_setTlsOptions_args, ZEND_SEND_BY_VAL)
+	ZEND_ARG_INFO(0, certReqs)
+	ZEND_ARG_INFO(0, tlsVersin)
+	ZEND_ARG_INFO(0, cipers)
+ZEND_END_ARG_INFO()
+
+ZEND_BEGIN_ARG_INFO(Mosquitto_Client_setTlsInsecure_args, ZEND_SEND_BY_VAL)
+	ZEND_ARG_INFO(0, value)
+ZEND_END_ARG_INFO()
+
+ZEND_BEGIN_ARG_INFO(Mosquitto_Client_setTlsCertificates_args, ZEND_SEND_BY_VAL)
+	ZEND_ARG_INFO(0, caPath)
+	ZEND_ARG_INFO(0, certFile)
+	ZEND_ARG_INFO(0, keyFile)
+	ZEND_ARG_INFO(0, password)
+ZEND_END_ARG_INFO()
+
 ZEND_BEGIN_ARG_INFO(Mosquitto_Client___construct_args, ZEND_SEND_BY_VAL)
 	ZEND_ARG_INFO(0, id)
 	ZEND_ARG_INFO(0, cleanSession)
@@ -154,7 +180,7 @@
 	zend_bool clean_session = 1;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "|s!b", &id, &id_len, &clean_session) == FAILURE) {
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "|s!b", &id, &id_len, &clean_session) == FAILURE) {
 		PHP_MOSQUITTO_RESTORE_ERRORS();
 		return;
 	}
@@ -163,7 +189,7 @@
 	object->client = mosquitto_new(id, clean_session, object);
 	if (!object->client) {
 		char *message = php_mosquitto_strerror_wrapper(errno);
-		zend_throw_exception(mosquitto_ce_exception, message, 1 TSRMLS_CC);
+		zend_throw_exception(mosquitto_ce_exception, message, 1);
 		if (message) {
 			efree(message);
 		}
@@ -183,7 +209,7 @@
 	int (*pw_callback)(char *, int, int, void *) = NULL;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "s!|s!s!s!",
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "s!|s!s!s!",
 				&ca_path, &ca_path_len,
 				&cert_path, &cert_path_len,
 				&key_path, &key_path_len,
@@ -192,17 +218,17 @@
 		return;
 	}
 
-	if ((php_check_open_basedir(ca_path TSRMLS_CC) < 0) ||
-		(php_check_open_basedir(cert_path TSRMLS_CC) < 0) ||
-		(php_check_open_basedir(key_path TSRMLS_CC) < 0))
+	if ((php_check_open_basedir(ca_path) < 0) ||
+		(php_check_open_basedir(cert_path) < 0) ||
+		(php_check_open_basedir(key_path) < 0))
 	{
 		PHP_MOSQUITTO_RESTORE_ERRORS();
 		return;
 	}
 
 	PHP_MOSQUITTO_RESTORE_ERRORS();
-
-	php_stat(ca_path, ca_path_len, FS_IS_DIR, &stat TSRMLS_CC);
+	zend_string *capath = zend_string_init(ca_path, sizeof(ca_path)-1, 0);	
+	php_stat(capath, ca_path_len, &stat);
 	is_dir = Z_BVAL(stat);
 
 	if (key_pw != NULL) {
@@ -217,7 +243,7 @@
 		retval = mosquitto_tls_set(object->client, ca_path, NULL, cert_path, key_path, pw_callback);
 	}
 
-	php_mosquitto_handle_errno(retval, errno TSRMLS_CC);
+	php_mosquitto_handle_errno(retval, errno);
 	RETURN_LONG(retval);
 }
 /* }}} */
@@ -230,7 +256,7 @@
 	int retval = 0;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "b", &value) == FAILURE) {
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "b", &value) == FAILURE) {
 		PHP_MOSQUITTO_RESTORE_ERRORS();
 		return;
 	}
@@ -238,7 +264,7 @@
 
 	retval = mosquitto_tls_insecure_set(object->client, value);
 
-	php_mosquitto_handle_errno(retval, errno TSRMLS_CC);
+	php_mosquitto_handle_errno(retval, errno);
 }
 /* }}} */
 
@@ -251,7 +277,7 @@
 	int retval = 0, verify_peer = 0;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "l|s!s!",
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "l|s!s!",
 				&verify_peer,
 				&tls_version, &tls_version_len,
 				&ciphers, &ciphers_len
@@ -263,7 +289,7 @@
 
 	retval = mosquitto_tls_opts_set(object->client, verify_peer, tls_version, ciphers);
 
-	php_mosquitto_handle_errno(retval, errno TSRMLS_CC);
+	php_mosquitto_handle_errno(retval, errno);
 	RETURN_LONG(retval);
 }
 /* }}} */
@@ -277,7 +303,7 @@
 	int retval = 0;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "s!s!|s!",
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "s!s!|s!",
 				&psk, &psk_len, &identity, &identity_len, &ciphers, &ciphers_len
 				) == FAILURE) {
 		PHP_MOSQUITTO_RESTORE_ERRORS();
@@ -287,7 +313,7 @@
 
 	retval = mosquitto_tls_psk_set(object->client, psk, identity, ciphers);
 
-	php_mosquitto_handle_errno(retval, errno TSRMLS_CC);
+	php_mosquitto_handle_errno(retval, errno);
 	RETURN_LONG(retval);
 }
 /* }}} */
@@ -301,14 +327,14 @@
 	int retval;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "ss", &username, &username_len, &password, &password_len) == FAILURE) {
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "ss", &username, &username_len, &password, &password_len) == FAILURE) {
 		PHP_MOSQUITTO_RESTORE_ERRORS();
 		return;
 	}
 	PHP_MOSQUITTO_RESTORE_ERRORS();
 
 	retval = mosquitto_username_pw_set(object->client, username, password);
-	php_mosquitto_handle_errno(retval, errno TSRMLS_CC);
+	php_mosquitto_handle_errno(retval, errno);
 }
 /* }}} */
 
@@ -323,7 +349,7 @@
 	char *topic, *payload;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "sslb",
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "sslb",
 				&topic, &topic_len, &payload, &payload_len, &qos, &retain) == FAILURE) {
 		PHP_MOSQUITTO_RESTORE_ERRORS();
 		return;
@@ -332,7 +358,7 @@
 
 	retval = mosquitto_will_set(object->client, topic, payload_len, (void *) payload, qos, retain);
 
-	php_mosquitto_handle_errno(retval, errno TSRMLS_CC);
+	php_mosquitto_handle_errno(retval, errno);
 }
 /* }}} */
 
@@ -351,7 +377,7 @@
 
 	retval = mosquitto_will_clear(object->client);
 
-	php_mosquitto_handle_errno(retval, errno TSRMLS_CC);
+	php_mosquitto_handle_errno(retval, errno);
 }
 /* }}} */
 
@@ -364,7 +390,7 @@
 	zend_bool exponential_backoff = 0;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "l|lb",
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "l|lb",
 				&reconnect_delay, &reconnect_delay_max, &exponential_backoff)  == FAILURE) {
 		PHP_MOSQUITTO_RESTORE_ERRORS();
 		return;
@@ -373,7 +399,7 @@
 
 	retval = mosquitto_reconnect_delay_set(object->client, reconnect_delay, reconnect_delay_max, exponential_backoff);
 
-	php_mosquitto_handle_errno(retval, errno TSRMLS_CC);
+	php_mosquitto_handle_errno(retval, errno);
 }
 /* }}} */
 
@@ -388,7 +414,7 @@
 	zend_long keepalive = 60;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "s|lls!",
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "s|lls!",
 				&host, &host_len, &port, &keepalive,
 				&interface, &interface_len)  == FAILURE) {
 
@@ -403,7 +429,7 @@
 		retval = mosquitto_connect_bind(object->client, host, port, keepalive, interface);
 	}
 
-	php_mosquitto_handle_errno(retval, errno TSRMLS_CC);
+	php_mosquitto_handle_errno(retval, errno);
 	RETURN_LONG(retval);
 }
 /* }}} */
@@ -424,7 +450,7 @@
 	retval = mosquitto_disconnect(object->client);
 	php_mosquitto_exit_loop(object);
 
-	php_mosquitto_handle_errno(retval, errno TSRMLS_CC);
+	php_mosquitto_handle_errno(retval, errno);
 }
 /* }}} */
 
@@ -436,7 +462,7 @@
 	zend_fcall_info_cache connect_callback_cache = empty_fcall_info_cache;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "f!",
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "f!",
 				&connect_callback, &connect_callback_cache)  == FAILURE) {
 
 		PHP_MOSQUITTO_RESTORE_ERRORS();
@@ -445,7 +471,7 @@
 	PHP_MOSQUITTO_RESTORE_ERRORS();
 
 	if (!ZEND_FCI_INITIALIZED(connect_callback)) {
-		zend_throw_exception(mosquitto_ce_exception, "Need a valid callback", 0 TSRMLS_CC);
+		zend_throw_exception(mosquitto_ce_exception, "Need a valid callback", 0);
 	}
 
 	PHP_MOSQUITTO_FREE_CALLBACK(object, connect);
@@ -465,7 +491,7 @@
 	zend_fcall_info_cache disconnect_callback_cache = empty_fcall_info_cache;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "f!",
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "f!",
 				&disconnect_callback, &disconnect_callback_cache)  == FAILURE) {
 
 		PHP_MOSQUITTO_RESTORE_ERRORS();
@@ -474,7 +500,7 @@
 	PHP_MOSQUITTO_RESTORE_ERRORS();
 
 	if (!ZEND_FCI_INITIALIZED(disconnect_callback)) {
-		zend_throw_exception(mosquitto_ce_exception, "Need a valid callback", 0 TSRMLS_CC);
+		zend_throw_exception(mosquitto_ce_exception, "Need a valid callback", 0);
 	}
 
 	PHP_MOSQUITTO_FREE_CALLBACK(object, disconnect);
@@ -494,7 +520,7 @@
 	zend_fcall_info_cache log_callback_cache = empty_fcall_info_cache;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "f!",
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "f!",
 				&log_callback, &log_callback_cache)  == FAILURE) {
 
 		PHP_MOSQUITTO_RESTORE_ERRORS();
@@ -503,7 +529,7 @@
 	PHP_MOSQUITTO_RESTORE_ERRORS();
 
 	if (!ZEND_FCI_INITIALIZED(log_callback)) {
-		zend_throw_exception(mosquitto_ce_exception, "Need a valid callback", 0 TSRMLS_CC);
+		zend_throw_exception(mosquitto_ce_exception, "Need a valid callback", 0);
 	}
 
 	PHP_MOSQUITTO_FREE_CALLBACK(object, log);
@@ -523,7 +549,7 @@
 	zend_fcall_info_cache subscribe_callback_cache = empty_fcall_info_cache;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "f!",
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "f!",
 				&subscribe_callback, &subscribe_callback_cache)  == FAILURE) {
 
 		PHP_MOSQUITTO_RESTORE_ERRORS();
@@ -532,7 +558,7 @@
 	PHP_MOSQUITTO_RESTORE_ERRORS();
 
 	if (!ZEND_FCI_INITIALIZED(subscribe_callback)) {
-		zend_throw_exception(mosquitto_ce_exception, "Need a valid callback", 0 TSRMLS_CC);
+		zend_throw_exception(mosquitto_ce_exception, "Need a valid callback", 0);
 	}
 
 	PHP_MOSQUITTO_FREE_CALLBACK(object, subscribe);
@@ -552,7 +578,7 @@
 	zend_fcall_info_cache unsubscribe_callback_cache = empty_fcall_info_cache;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "f!",
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "f!",
 				&unsubscribe_callback, &unsubscribe_callback_cache)  == FAILURE) {
 
 		PHP_MOSQUITTO_RESTORE_ERRORS();
@@ -561,7 +587,7 @@
 	PHP_MOSQUITTO_RESTORE_ERRORS();
 
 	if (!ZEND_FCI_INITIALIZED(unsubscribe_callback)) {
-		zend_throw_exception(mosquitto_ce_exception, "Need a valid callback", 0 TSRMLS_CC);
+		zend_throw_exception(mosquitto_ce_exception, "Need a valid callback", 0);
 	}
 
 	PHP_MOSQUITTO_FREE_CALLBACK(object, unsubscribe);
@@ -581,7 +607,7 @@
 	zend_fcall_info_cache message_callback_cache = empty_fcall_info_cache;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "f!",
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "f!",
 				&message_callback, &message_callback_cache)  == FAILURE) {
 
 		PHP_MOSQUITTO_RESTORE_ERRORS();
@@ -590,7 +616,7 @@
 	PHP_MOSQUITTO_RESTORE_ERRORS();
 
 	if (!ZEND_FCI_INITIALIZED(message_callback)) {
-		zend_throw_exception(mosquitto_ce_exception, "Need a valid callback", 0 TSRMLS_CC);
+		zend_throw_exception(mosquitto_ce_exception, "Need a valid callback", 0);
 	}
 
 	PHP_MOSQUITTO_FREE_CALLBACK(object, message);
@@ -610,7 +636,7 @@
 	zend_fcall_info_cache publish_callback_cache = empty_fcall_info_cache;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "f!",
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "f!",
 				&publish_callback, &publish_callback_cache)  == FAILURE) {
 
 		PHP_MOSQUITTO_RESTORE_ERRORS();
@@ -619,7 +645,7 @@
 	PHP_MOSQUITTO_RESTORE_ERRORS();
 
 	if (!ZEND_FCI_INITIALIZED(publish_callback)) {
-		zend_throw_exception(mosquitto_ce_exception, "Need a valid callback", 0 TSRMLS_CC);
+		zend_throw_exception(mosquitto_ce_exception, "Need a valid callback", 0);
 	}
 
 	PHP_MOSQUITTO_FREE_CALLBACK(object, publish);
@@ -655,7 +681,7 @@
 	zend_long max = 0;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "l", &max)  == FAILURE) {
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "l", &max)  == FAILURE) {
 		PHP_MOSQUITTO_RESTORE_ERRORS();
 		return;
 	}
@@ -663,7 +689,7 @@
 
 	retval = mosquitto_max_inflight_messages_set(object->client, max);
 
-	php_mosquitto_handle_errno(retval, errno TSRMLS_CC);
+	php_mosquitto_handle_errno(retval, errno);
 }
 /* }}} */
 
@@ -674,7 +700,7 @@
 	zend_long retry = 0;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "l", &retry)  == FAILURE) {
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "l", &retry)  == FAILURE) {
 		PHP_MOSQUITTO_RESTORE_ERRORS();
 		return;
 	}
@@ -695,7 +721,7 @@
 	char *topic, *payload;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "ss|lb",
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "ss|lb",
 				&topic, &topic_len, &payload, &payload_len, &qos, &retain) == FAILURE) {
 		PHP_MOSQUITTO_RESTORE_ERRORS();
 		return;
@@ -704,7 +730,7 @@
 
 	retval = mosquitto_publish(object->client, &mid, topic, payload_len, (void *) payload, qos, retain);
 
-	php_mosquitto_handle_errno(retval, errno TSRMLS_CC);
+	php_mosquitto_handle_errno(retval, errno);
 
 	RETURN_LONG(mid);
 }
@@ -720,7 +746,7 @@
 	zend_long qos;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "sl",
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "sl",
 				&sub, &sub_len, &qos) == FAILURE) {
 		PHP_MOSQUITTO_RESTORE_ERRORS();
 		return;
@@ -729,7 +755,7 @@
 
 	retval = mosquitto_subscribe(object->client, &mid, sub, qos);
 
-	php_mosquitto_handle_errno(retval, errno TSRMLS_CC);
+	php_mosquitto_handle_errno(retval, errno);
 
 	RETURN_LONG(mid);
 }
@@ -744,7 +770,7 @@
 	int retval, mid;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "s",
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "s",
 				&sub, &sub_len) == FAILURE) {
 		PHP_MOSQUITTO_RESTORE_ERRORS();
 		return;
@@ -753,7 +779,7 @@
 
 	retval = mosquitto_unsubscribe(object->client, &mid, sub);
 
-	php_mosquitto_handle_errno(retval, errno TSRMLS_CC);
+	php_mosquitto_handle_errno(retval, errno);
 
 	RETURN_LONG(mid);
 }
@@ -767,7 +793,7 @@
 	long retval = 0;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "|ll",
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "|ll",
 				&timeout, &max_packets) == FAILURE) {
 		PHP_MOSQUITTO_RESTORE_ERRORS();
 		return;
@@ -775,7 +801,7 @@
 	PHP_MOSQUITTO_RESTORE_ERRORS();
 
 	retval = mosquitto_loop(object->client, timeout, max_packets);
-	php_mosquitto_handle_errno(retval, errno TSRMLS_CC);
+	php_mosquitto_handle_errno(retval, errno);
 }
 /* }}} */
 
@@ -787,7 +813,7 @@
 	long retval = 0;
 
 	PHP_MOSQUITTO_ERROR_HANDLING();
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "|ll",
+	if (zend_parse_parameters(ZEND_NUM_ARGS(), "|ll",
 				&timeout, &max_packets) == FAILURE) {
 		PHP_MOSQUITTO_RESTORE_ERRORS();
 		return;
@@ -798,7 +824,7 @@
 
 	while (object->looping) {
 		retval = mosquitto_loop(object->client, timeout, max_packets);
-		php_mosquitto_handle_errno(retval, errno TSRMLS_CC);
+		php_mosquitto_handle_errno(retval, errno);
 
 		if (EG(exception)) {
 			break;
@@ -848,7 +874,7 @@
 	object->looping = 0;
 }
 
-static void mosquitto_client_object_destroy(zend_object *object ZO_HANDLE_DC TSRMLS_DC)
+static void mosquitto_client_object_destroy(zend_object *object ZO_HANDLE_DC)
 {
 	mosquitto_client_object *client = mosquitto_client_object_from_zend_object(object);
 
@@ -868,7 +894,7 @@
 	PHP_MOSQUITTO_FREE_CALLBACK(client, log);
 }
 
-static void mosquitto_client_object_free(zend_object *object TSRMLS_DC) {
+static void mosquitto_client_object_free(zend_object *object) {
 	mosquitto_client_object *client = mosquitto_client_object_from_zend_object(object);
 
 #ifdef ZEND_ENGINE_3
@@ -897,7 +923,7 @@
 	return ret;
 }
 #else
-static zend_object_value mosquitto_client_object_new(zend_class_entry *ce TSRMLS_DC) {
+static zend_object_value mosquitto_client_object_new(zend_class_entry *ce) {
 
 	zend_object_value retval;
 	mosquitto_client_object *client;
@@ -922,23 +948,23 @@
 #endif
 	retval.handle = zend_objects_store_put(client,
 		(zend_objects_store_dtor_t)mosquitto_client_object_destroy,
-		(zend_objects_free_object_storage_t)mosquitto_client_object_free, NULL TSRMLS_CC);
+		(zend_objects_free_object_storage_t)mosquitto_client_object_free, NULL);
 	retval.handlers = &mosquitto_std_object_handlers;
 	return retval;
 }
 #endif
 
-void php_mosquitto_handle_errno(int retval, int err TSRMLS_DC) {
+void php_mosquitto_handle_errno(int retval, int err) {
 	if (retval == MOSQ_ERR_ERRNO) {
 		char *message = php_mosquitto_strerror_wrapper(errno);
 		if (message) {
-			zend_throw_exception(mosquitto_ce_exception, message, 0 TSRMLS_CC);
+			zend_throw_exception(mosquitto_ce_exception, message, 0);
 			efree(message);
 		}
 	} else if (retval != MOSQ_ERR_SUCCESS) {
 		const char *message = mosquitto_strerror(retval);
 		if (message && *message) {
-			zend_throw_exception(mosquitto_ce_exception, message, 0 TSRMLS_CC);
+			zend_throw_exception(mosquitto_ce_exception, message, 0);
 		}
 	}
 }
@@ -983,9 +1009,9 @@
 	object->connect_callback.params = params;
 	object->connect_callback.param_count = 2;
 
-	if (zend_call_function(&object->connect_callback, &object->connect_callback_cache TSRMLS_CC) == FAILURE) {
+	if (zend_call_function(&object->connect_callback, &object->connect_callback_cache) == FAILURE) {
 		if (!EG(exception)) {
-			zend_throw_exception_ex(mosquitto_ce_exception, 0 TSRMLS_CC, "Failed to invoke connect callback %s()", mosquitto_finfo_name(&object->connect_callback));
+			zend_throw_exception_ex(mosquitto_ce_exception, 0, "Failed to invoke connect callback %s()", mosquitto_finfo_name(&object->connect_callback));
 		}
 	}
 
@@ -1036,9 +1062,9 @@
 	object->disconnect_callback.params = params;
 	object->disconnect_callback.param_count = 1;
 
-	if (zend_call_function(&object->disconnect_callback, &object->disconnect_callback_cache TSRMLS_CC) == FAILURE) {
+	if (zend_call_function(&object->disconnect_callback, &object->disconnect_callback_cache) == FAILURE) {
 		if (!EG(exception)) {
-			zend_throw_exception_ex(mosquitto_ce_exception, 0 TSRMLS_CC, "Failed to invoke disconnect callback %s()", mosquitto_finfo_name(&object->disconnect_callback));
+			zend_throw_exception_ex(mosquitto_ce_exception, 0, "Failed to invoke disconnect callback %s()", mosquitto_finfo_name(&object->disconnect_callback));
 		}
 	}
 
@@ -1092,9 +1118,9 @@
 	object->log_callback.params = params;
 	object->log_callback.param_count = 2;
 
-	if (zend_call_function(&object->log_callback, &object->log_callback_cache TSRMLS_CC) == FAILURE) {
+	if (zend_call_function(&object->log_callback, &object->log_callback_cache) == FAILURE) {
 		if (!EG(exception)) {
-			zend_throw_exception_ex(mosquitto_ce_exception, 0 TSRMLS_CC, "Failed to invoke log callback %s()", mosquitto_finfo_name(&object->log_callback));
+			zend_throw_exception_ex(mosquitto_ce_exception, 0, "Failed to invoke log callback %s()", mosquitto_finfo_name(&object->log_callback));
 		}
 	}
 
@@ -1156,9 +1182,9 @@
 	object->message_callback.params = params;
 	object->message_callback.param_count = 1;
 
-	if (zend_call_function(&object->message_callback, &object->message_callback_cache TSRMLS_CC) == FAILURE) {
+	if (zend_call_function(&object->message_callback, &object->message_callback_cache) == FAILURE) {
 		if (!EG(exception)) {
-			zend_throw_exception_ex(mosquitto_ce_exception, 0 TSRMLS_CC, "Failed to invoke message callback %s()", mosquitto_finfo_name(&object->message_callback));
+			zend_throw_exception_ex(mosquitto_ce_exception, 0, "Failed to invoke message callback %s()", mosquitto_finfo_name(&object->message_callback));
 		}
 	}
 
@@ -1206,9 +1232,9 @@
 	object->publish_callback.params = params;
 	object->publish_callback.param_count = 1;
 
-	if (zend_call_function(&object->publish_callback, &object->publish_callback_cache TSRMLS_CC) == FAILURE) {
+	if (zend_call_function(&object->publish_callback, &object->publish_callback_cache) == FAILURE) {
 		if (!EG(exception)) {
-			zend_throw_exception_ex(mosquitto_ce_exception, 0 TSRMLS_CC, "Failed to invoke publish callback %s()", mosquitto_finfo_name(&object->publish_callback));
+			zend_throw_exception_ex(mosquitto_ce_exception, 0, "Failed to invoke publish callback %s()", mosquitto_finfo_name(&object->publish_callback));
 		}
 	}
 
@@ -1267,9 +1293,9 @@
 	object->subscribe_callback.params = params;
 	object->subscribe_callback.param_count = 3;
 
-	if (zend_call_function(&object->subscribe_callback, &object->subscribe_callback_cache TSRMLS_CC) == FAILURE) {
+	if (zend_call_function(&object->subscribe_callback, &object->subscribe_callback_cache) == FAILURE) {
 		if (!EG(exception)) {
-			zend_throw_exception_ex(mosquitto_ce_exception, 0 TSRMLS_CC, "Failed to invoke subscribe callback %s()", mosquitto_finfo_name(&object->subscribe_callback));
+			zend_throw_exception_ex(mosquitto_ce_exception, 0, "Failed to invoke subscribe callback %s()", mosquitto_finfo_name(&object->subscribe_callback));
 		}
 	}
 
@@ -1322,9 +1348,9 @@
 	object->unsubscribe_callback.params = params;
 	object->unsubscribe_callback.param_count = 1;
 
-	if (zend_call_function(&object->unsubscribe_callback, &object->unsubscribe_callback_cache TSRMLS_CC) == FAILURE) {
+	if (zend_call_function(&object->unsubscribe_callback, &object->unsubscribe_callback_cache) == FAILURE) {
 		if (!EG(exception)) {
-			zend_throw_exception_ex(mosquitto_ce_exception, 0 TSRMLS_CC, "Failed to invoke unsubscribe callback %s()", mosquitto_finfo_name(&object->unsubscribe_callback));
+			zend_throw_exception_ex(mosquitto_ce_exception, 0, "Failed to invoke unsubscribe callback %s()", mosquitto_finfo_name(&object->unsubscribe_callback));
 		}
 	}
 
@@ -1341,7 +1367,7 @@
 }
 
 static int php_mosquitto_pw_callback(char *buf, int size, int rwflag, void *userdata) {
-	TSRMLS_FETCH();
+	TSRMLS_CACHE;
 	int key_len;
 
 	strncpy(buf, MQTTG(client_key), size);
@@ -1354,7 +1380,7 @@
 
 /* {{{ mosquitto_client_methods */
 const zend_function_entry mosquitto_client_methods[] = {
-	PHP_ME(Mosquitto_Client, __construct, Mosquitto_Client___construct_args, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
+	PHP_ME(Mosquitto_Client, __construct, Mosquitto_Client___construct_args, ZEND_ACC_PUBLIC)
 	PHP_ME(Mosquitto_Client, onConnect, Mosquitto_Client_callback_args, ZEND_ACC_PUBLIC)
 	PHP_ME(Mosquitto_Client, onDisconnect, Mosquitto_Client_callback_args, ZEND_ACC_PUBLIC)
 	PHP_ME(Mosquitto_Client, onLog, Mosquitto_Client_callback_args, ZEND_ACC_PUBLIC)
@@ -1362,25 +1388,25 @@
 	PHP_ME(Mosquitto_Client, onUnsubscribe, Mosquitto_Client_callback_args, ZEND_ACC_PUBLIC)
 	PHP_ME(Mosquitto_Client, onMessage, Mosquitto_Client_callback_args, ZEND_ACC_PUBLIC)
 	PHP_ME(Mosquitto_Client, onPublish, Mosquitto_Client_callback_args, ZEND_ACC_PUBLIC)
-	PHP_ME(Mosquitto_Client, getSocket, NULL, ZEND_ACC_PUBLIC)
-	PHP_ME(Mosquitto_Client, setTlsCertificates, NULL, ZEND_ACC_PUBLIC)
-	PHP_ME(Mosquitto_Client, setTlsInsecure, NULL, ZEND_ACC_PUBLIC)
-	PHP_ME(Mosquitto_Client, setTlsOptions, NULL, ZEND_ACC_PUBLIC)
-	PHP_ME(Mosquitto_Client, setTlsPSK, NULL, ZEND_ACC_PUBLIC)
+	PHP_ME(Mosquitto_Client, getSocket, Mosquitto_Client_no_args, ZEND_ACC_PUBLIC)
+	PHP_ME(Mosquitto_Client, setTlsCertificates, Mosquitto_Client_setTlsCertificates_args, ZEND_ACC_PUBLIC)
+	PHP_ME(Mosquitto_Client, setTlsInsecure, Mosquitto_Client_setTlsInsecure_args, ZEND_ACC_PUBLIC)
+	PHP_ME(Mosquitto_Client, setTlsOptions, Mosquitto_Client_setTlsOptions_args, ZEND_ACC_PUBLIC)
+	PHP_ME(Mosquitto_Client, setTlsPSK, Mosquitto_Client_setTlsPSK_args, ZEND_ACC_PUBLIC)
 	PHP_ME(Mosquitto_Client, setCredentials, Mosquitto_Client_setCredentials_args, ZEND_ACC_PUBLIC)
 	PHP_ME(Mosquitto_Client, setWill, Mosquitto_Client_setWill_args, ZEND_ACC_PUBLIC)
-	PHP_ME(Mosquitto_Client, clearWill, NULL, ZEND_ACC_PUBLIC)
+	PHP_ME(Mosquitto_Client, clearWill, Mosquitto_Client_no_args, ZEND_ACC_PUBLIC)
 	PHP_ME(Mosquitto_Client, setReconnectDelay, Mosquitto_Client_setReconnectDelay_args, ZEND_ACC_PUBLIC)
 	PHP_ME(Mosquitto_Client, setMessageRetry, Mosquitto_Client_setMessageRetry_args, ZEND_ACC_PUBLIC)
 	PHP_ME(Mosquitto_Client, connect, Mosquitto_Client_connect_args, ZEND_ACC_PUBLIC)
-	PHP_ME(Mosquitto_Client, disconnect, NULL, ZEND_ACC_PUBLIC)
+	PHP_ME(Mosquitto_Client, disconnect, Mosquitto_Client_no_args, ZEND_ACC_PUBLIC)
 	PHP_ME(Mosquitto_Client, setMaxInFlightMessages, Mosquitto_Client_setMaxInFlightMessages_args, ZEND_ACC_PUBLIC)
 	PHP_ME(Mosquitto_Client, publish, Mosquitto_Client_publish_args, ZEND_ACC_PUBLIC)
 	PHP_ME(Mosquitto_Client, subscribe, Mosquitto_Client_subscribe_args, ZEND_ACC_PUBLIC)
 	PHP_ME(Mosquitto_Client, unsubscribe, Mosquitto_Client_unsubscribe_args, ZEND_ACC_PUBLIC)
 	PHP_ME(Mosquitto_Client, loop, Mosquitto_Client_loop_args, ZEND_ACC_PUBLIC)
 	PHP_ME(Mosquitto_Client, loopForever, Mosquitto_Client_loopForever_args, ZEND_ACC_PUBLIC)
-	PHP_ME(Mosquitto_Client, exitLoop, NULL, ZEND_ACC_PUBLIC)
+	PHP_ME(Mosquitto_Client, exitLoop, Mosquitto_Client_no_args, ZEND_ACC_PUBLIC)
 	{NULL, NULL, NULL}
 };
 /* }}} */
@@ -1432,18 +1458,18 @@
 #endif
 
 	INIT_NS_CLASS_ENTRY(client_ce, "Mosquitto", "Client", mosquitto_client_methods);
-	mosquitto_ce_client = zend_register_internal_class(&client_ce TSRMLS_CC);
+	mosquitto_ce_client = zend_register_internal_class(&client_ce);
 	mosquitto_ce_client->create_object = mosquitto_client_object_new;
 
 	INIT_NS_CLASS_ENTRY(exception_ce, "Mosquitto", "Exception", NULL);
-	mosquitto_ce_exception = zend_register_internal_class_ex(&exception_ce, zend_exception_get_default(TSRMLS_C)
+	mosquitto_ce_exception = zend_register_internal_class_ex(&exception_ce, zend_exception_get_default(TSRM_H)
 #ifndef ZEND_ENGINE_3
-			, "Exception" TSRMLS_CC
+			, "Exception"
 #endif
 	);
 
 	#define REGISTER_MOSQUITTO_LONG_CONST(const_name, value) \
-	zend_declare_class_constant_long(mosquitto_ce_client, const_name, sizeof(const_name)-1, (long)value TSRMLS_CC); \
+	zend_declare_class_constant_long(mosquitto_ce_client, const_name, sizeof(const_name)-1, (long)value); \
 	REGISTER_LONG_CONSTANT(#value,  value,  CONST_CS | CONST_PERSISTENT);
 
 	REGISTER_MOSQUITTO_LONG_CONST("LOG_INFO", MOSQ_LOG_INFO);
@@ -1452,8 +1478,8 @@
 	REGISTER_MOSQUITTO_LONG_CONST("LOG_ERR", MOSQ_LOG_ERR);
 	REGISTER_MOSQUITTO_LONG_CONST("LOG_DEBUG", MOSQ_LOG_DEBUG);
 
-	zend_declare_class_constant_long(mosquitto_ce_client, "SSL_VERIFY_NONE", sizeof("SSL_VERIFY_NONE")-1, 0 TSRMLS_CC);
-	zend_declare_class_constant_long(mosquitto_ce_client, "SSL_VERIFY_PEER", sizeof("SSL_VERIFY_PEER")-1, 1 TSRMLS_CC);
+	zend_declare_class_constant_long(mosquitto_ce_client, "SSL_VERIFY_NONE", sizeof("SSL_VERIFY_NONE")-1, 0);
+	zend_declare_class_constant_long(mosquitto_ce_client, "SSL_VERIFY_PEER", sizeof("SSL_VERIFY_PEER")-1, 1);
 
 	mosquitto_lib_init();
 
